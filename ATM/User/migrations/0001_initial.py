<<<<<<< HEAD
# Generated by Django 4.2.5 on 2023-11-13 10:31

from django.db import migrations, models
import django.db.models.deletion
=======
# Generated by Django 3.2 on 2022-11-24 09:47

import django.core.validators
from django.db import migrations, models
import django.utils.timezone
>>>>>>> 850a2bbd4906cad3c03d18f24aa64f38b1889aac


class Migration(migrations.Migration):

    initial = True

    dependencies = [
<<<<<<< HEAD
=======
        ('auth', '0012_alter_user_first_name_max_length'),
>>>>>>> 850a2bbd4906cad3c03d18f24aa64f38b1889aac
    ]

    operations = [
        migrations.CreateModel(
<<<<<<< HEAD
            name='ATMUser',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=255)),
                ('password', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('account_id', models.AutoField(primary_key=True, serialize=False)),
                ('balance', models.DecimalField(decimal_places=2, max_digits=7)),
                ('IBAN', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='HolderType',
            fields=[
                ('holderType_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='PIN',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pin', models.CharField(max_length=6)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.atmuser')),
            ],
        ),
        migrations.CreateModel(
            name='Holder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.bankaccount')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.holdertype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.atmuser')),
            ],
        ),
        migrations.AddField(
            model_name='bankaccount',
            name='holders',
            field=models.ManyToManyField(through='user.Holder', to='user.atmuser'),
=======
            name='PhoneToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=11, validators=[django.core.validators.RegexValidator(message='Enter a valid mobile number. This value may contain only numbers.', regex='09(\\d{9})$')])),
                ('otp', models.IntegerField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('used', models.BooleanField(default=False)),
                ('ip_address', models.GenericIPAddressField(blank=True, editable=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(blank=True, max_length=150)),
                ('email', models.EmailField(blank=True, max_length=60, null=True, unique=True, verbose_name='email field')),
                ('phone', models.CharField(max_length=11, unique=True, validators=[django.core.validators.RegexValidator(message='Enter a valid mobile number. This value may contain only numbers.', regex='09(\\d{9})$')], verbose_name='phone field')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
>>>>>>> 850a2bbd4906cad3c03d18f24aa64f38b1889aac
        ),
    ]
